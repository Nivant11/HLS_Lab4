

================================================================
== Vivado HLS Report for 'max_pool_32_8_s'
================================================================
* Date:           Sun Oct 29 21:09:10 2023

* Version:        2019.2.1 (Build 2724168 on Thu Dec 05 05:19:09 MST 2019)
* Project:        bnn_reshape.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.290 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1026|     1026| 10.260 us | 10.260 us |  1026|  1026|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name            |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_MP_M_LOOP_MP_X_LOOP_MP_Y  |     1024|     1024|         3|          2|          1|   512|    yes   |
        +---------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (1.76ns)   --->   "br label %1" [./layer.h:97]   --->   Operation 6 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.29>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten21 = phi i10 [ 0, %0 ], [ %add_ln97, %LOOP_MP_Y ]" [./layer.h:97]   --->   Operation 7 'phi' 'indvar_flatten21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%m_0 = phi i6 [ 0, %0 ], [ %select_ln110_1, %LOOP_MP_Y ]" [./layer.h:110]   --->   Operation 8 'phi' 'm_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6 [ 0, %0 ], [ %select_ln99, %LOOP_MP_Y ]" [./layer.h:99]   --->   Operation 9 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%x_0 = phi i3 [ 0, %0 ], [ %select_ln110_3, %LOOP_MP_Y ]" [./layer.h:110]   --->   Operation 10 'phi' 'x_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%y_0 = phi i3 [ 0, %0 ], [ %y, %LOOP_MP_Y ]"   --->   Operation 11 'phi' 'y_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%shl_ln110 = shl i3 %x_0, 1" [./layer.h:110]   --->   Operation 12 'shl' 'shl_ln110' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%or_ln110_1 = or i3 %shl_ln110, 1" [./layer.h:110]   --->   Operation 13 'or' 'or_ln110_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.77ns)   --->   "%icmp_ln97 = icmp eq i10 %indvar_flatten21, -512" [./layer.h:97]   --->   Operation 14 'icmp' 'icmp_ln97' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (1.73ns)   --->   "%add_ln97 = add i10 1, %indvar_flatten21" [./layer.h:97]   --->   Operation 15 'add' 'add_ln97' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln97, label %2, label %LOOP_MP_Y" [./layer.h:97]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.82ns)   --->   "%m = add i6 1, %m_0" [./layer.h:97]   --->   Operation 17 'add' 'm' <Predicate = (!icmp_ln97)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.42ns)   --->   "%icmp_ln99 = icmp eq i6 %indvar_flatten, 16" [./layer.h:99]   --->   Operation 18 'icmp' 'icmp_ln99' <Predicate = (!icmp_ln97)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.98ns)   --->   "%select_ln110 = select i1 %icmp_ln99, i3 0, i3 %x_0" [./layer.h:110]   --->   Operation 19 'select' 'select_ln110' <Predicate = (!icmp_ln97)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node and_ln110)   --->   "%xor_ln110 = xor i1 %icmp_ln99, true" [./layer.h:110]   --->   Operation 20 'xor' 'xor_ln110' <Predicate = (!icmp_ln97)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (1.13ns)   --->   "%icmp_ln101 = icmp eq i3 %y_0, -4" [./layer.h:101]   --->   Operation 21 'icmp' 'icmp_ln101' <Predicate = (!icmp_ln97)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln110 = and i1 %icmp_ln101, %xor_ln110" [./layer.h:110]   --->   Operation 22 'and' 'and_ln110' <Predicate = (!icmp_ln97)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.65ns)   --->   "%x = add i3 1, %select_ln110" [./layer.h:99]   --->   Operation 23 'add' 'x' <Predicate = (!icmp_ln97)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node select_ln110_2)   --->   "%or_ln110_5 = or i1 %and_ln110, %icmp_ln99" [./layer.h:110]   --->   Operation 24 'or' 'or_ln110_5' <Predicate = (!icmp_ln97)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln110_2 = select i1 %or_ln110_5, i3 0, i3 %y_0" [./layer.h:110]   --->   Operation 25 'select' 'select_ln110_2' <Predicate = (!icmp_ln97)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%shl_ln110_1 = shl i3 %x, 1" [./layer.h:110]   --->   Operation 26 'shl' 'shl_ln110_1' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln110_7)   --->   "%or_ln110_6 = or i3 %shl_ln110_1, 1" [./layer.h:110]   --->   Operation 27 'or' 'or_ln110_6' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln110 = trunc i3 %select_ln110_2 to i2" [./layer.h:110]   --->   Operation 28 'trunc' 'trunc_ln110' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln110_2 = shl i3 %select_ln110_2, 1" [./layer.h:110]   --->   Operation 29 'shl' 'shl_ln110_2' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node select_ln110_5)   --->   "%select_ln110_4 = select i1 %icmp_ln99, i3 0, i3 %shl_ln110" [./layer.h:110]   --->   Operation 30 'select' 'select_ln110_4' <Predicate = (!icmp_ln97)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln110_5 = select i1 %and_ln110, i3 %shl_ln110_1, i3 %select_ln110_4" [./layer.h:110]   --->   Operation 31 'select' 'select_ln110_5' <Predicate = (!icmp_ln97)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_s = call i64 @_ssdm_op_BitConcatenate.i64.i58.i2.i1.i3(i58 0, i2 %trunc_ln110, i1 false, i3 %select_ln110_5)" [./layer.h:110]   --->   Operation 32 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [64 x i32]* %input_r, i64 0, i64 %tmp_s" [./layer.h:110]   --->   Operation 33 'getelementptr' 'input_addr' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node select_ln110_7)   --->   "%select_ln110_6 = select i1 %icmp_ln99, i3 1, i3 %or_ln110_1" [./layer.h:110]   --->   Operation 34 'select' 'select_ln110_6' <Predicate = (!icmp_ln97)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln110_7 = select i1 %and_ln110, i3 %or_ln110_6, i3 %select_ln110_6" [./layer.h:110]   --->   Operation 35 'select' 'select_ln110_7' <Predicate = (!icmp_ln97)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [2/2] (3.25ns)   --->   "%input_load = load i32* %input_addr, align 4" [./layer.h:110]   --->   Operation 36 'load' 'input_load' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%or_ln110 = or i3 %shl_ln110_2, 1" [./layer.h:110]   --->   Operation 37 'or' 'or_ln110' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i3.i3(i58 0, i3 %or_ln110, i3 %select_ln110_5)" [./layer.h:110]   --->   Operation 38 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%input_addr_1 = getelementptr [64 x i32]* %input_r, i64 0, i64 %tmp_2" [./layer.h:110]   --->   Operation 39 'getelementptr' 'input_addr_1' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 40 [2/2] (3.25ns)   --->   "%input_load_1 = load i32* %input_addr_1, align 4" [./layer.h:110]   --->   Operation 40 'load' 'input_load_1' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 41 [1/1] (1.82ns)   --->   "%add_ln99 = add i6 1, %indvar_flatten" [./layer.h:99]   --->   Operation 41 'add' 'add_ln99' <Predicate = (!icmp_ln97)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.08>
ST_3 : Operation 42 [1/1] (1.18ns)   --->   "%select_ln110_1 = select i1 %icmp_ln99, i6 %m, i6 %m_0" [./layer.h:110]   --->   Operation 42 'select' 'select_ln110_1' <Predicate = (!icmp_ln97)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i6 %select_ln110_1 to i7" [./layer.h:110]   --->   Operation 43 'zext' 'zext_ln110' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.98ns)   --->   "%select_ln110_3 = select i1 %and_ln110, i3 %x, i3 %select_ln110" [./layer.h:110]   --->   Operation 44 'select' 'select_ln110_3' <Predicate = (!icmp_ln97)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln110_1 = zext i3 %select_ln110_3 to i6" [./layer.h:110]   --->   Operation 45 'zext' 'zext_ln110_1' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_1 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i2.i1.i3(i58 0, i2 %trunc_ln110, i1 false, i3 %select_ln110_7)" [./layer.h:110]   --->   Operation 46 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%input_addr_2 = getelementptr [64 x i32]* %input_r, i64 0, i64 %tmp_1" [./layer.h:110]   --->   Operation 47 'getelementptr' 'input_addr_2' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 48 [1/2] (3.25ns)   --->   "%input_load = load i32* %input_addr, align 4" [./layer.h:110]   --->   Operation 48 'load' 'input_load' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node or_ln110_2)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i7(i32 %input_load, i7 %zext_ln110)" [./layer.h:110]   --->   Operation 49 'bitselect' 'tmp' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_3 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i3.i3(i58 0, i3 %or_ln110, i3 %select_ln110_7)" [./layer.h:110]   --->   Operation 50 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%input_addr_3 = getelementptr [64 x i32]* %input_r, i64 0, i64 %tmp_3" [./layer.h:110]   --->   Operation 51 'getelementptr' 'input_addr_3' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 52 [1/2] (3.25ns)   --->   "%input_load_1 = load i32* %input_addr_1, align 4" [./layer.h:110]   --->   Operation 52 'load' 'input_load_1' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node or_ln110_2)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i32.i7(i32 %input_load_1, i7 %zext_ln110)" [./layer.h:110]   --->   Operation 53 'bitselect' 'tmp_4' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 54 [2/2] (3.25ns)   --->   "%input_load_2 = load i32* %input_addr_2, align 4" [./layer.h:110]   --->   Operation 54 'load' 'input_load_2' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 55 [2/2] (3.25ns)   --->   "%input_load_3 = load i32* %input_addr_3, align 4" [./layer.h:110]   --->   Operation 55 'load' 'input_load_3' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 56 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln110_2 = or i1 %tmp_4, %tmp" [./layer.h:110]   --->   Operation 56 'or' 'or_ln110_2' <Predicate = (!icmp_ln97)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_8 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln110_2, i2 0)" [./layer.h:114]   --->   Operation 57 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i5 %tmp_8 to i6" [./layer.h:114]   --->   Operation 58 'zext' 'zext_ln114' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.78ns)   --->   "%add_ln114 = add i6 %zext_ln114, %zext_ln110_1" [./layer.h:114]   --->   Operation 59 'add' 'add_ln114' <Predicate = (!icmp_ln97)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln114_1 = zext i6 %add_ln114 to i64" [./layer.h:114]   --->   Operation 60 'zext' 'zext_ln114_1' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [16 x i32]* %output_r, i64 0, i64 %zext_ln114_1" [./layer.h:114]   --->   Operation 61 'getelementptr' 'output_addr' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_3 : Operation 62 [2/2] (2.32ns)   --->   "%output_load = load i32* %output_addr, align 4" [./layer.h:114]   --->   Operation 62 'load' 'output_load' <Predicate = (!icmp_ln97)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 63 [1/1] (1.65ns)   --->   "%y = add i3 1, %select_ln110_2" [./layer.h:101]   --->   Operation 63 'add' 'y' <Predicate = (!icmp_ln97)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (1.18ns)   --->   "%select_ln99 = select i1 %icmp_ln99, i6 1, i6 %add_ln99" [./layer.h:99]   --->   Operation 64 'select' 'select_ln99' <Predicate = (!icmp_ln97)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.55>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @LOOP_MP_M_LOOP_MP_X_LOOP_MP_Y_str)"   --->   Operation 65 'specloopname' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)"   --->   Operation 66 'speclooptripcount' 'empty' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @LOOP_MP_X_LOOP_MP_Y_str)"   --->   Operation 67 'specloopname' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str14) nounwind" [./layer.h:101]   --->   Operation 68 'specloopname' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str14)" [./layer.h:101]   --->   Operation 69 'specregionbegin' 'tmp_7' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str7) nounwind" [./layer.h:102]   --->   Operation 70 'specpipeline' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 71 [1/2] (3.25ns)   --->   "%input_load_2 = load i32* %input_addr_2, align 4" [./layer.h:110]   --->   Operation 71 'load' 'input_load_2' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node or_ln110_4)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i7(i32 %input_load_2, i7 %zext_ln110)" [./layer.h:110]   --->   Operation 72 'bitselect' 'tmp_5' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 73 [1/2] (3.25ns)   --->   "%input_load_3 = load i32* %input_addr_3, align 4" [./layer.h:110]   --->   Operation 73 'load' 'input_load_3' <Predicate = (!icmp_ln97)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node or_ln110_4)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i7(i32 %input_load_3, i7 %zext_ln110)" [./layer.h:110]   --->   Operation 74 'bitselect' 'tmp_6' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node or_ln110_4)   --->   "%or_ln110_3 = or i1 %tmp_5, %tmp_6" [./layer.h:110]   --->   Operation 75 'or' 'or_ln110_3' <Predicate = (!icmp_ln97)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln110_4 = or i1 %or_ln110_3, %or_ln110_2" [./layer.h:110]   --->   Operation 76 'or' 'or_ln110_4' <Predicate = (!icmp_ln97)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/2] (2.32ns)   --->   "%output_load = load i32* %output_addr, align 4" [./layer.h:114]   --->   Operation 77 'load' 'output_load' <Predicate = (!icmp_ln97)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 @_ssdm_op_BitSet.i32.i32.i7.i1(i32 %output_load, i7 %zext_ln110, i1 %or_ln110_4)" [./layer.h:114]   --->   Operation 78 'bitset' 'tmp_9' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (2.32ns)   --->   "store i32 %tmp_9, i32* %output_addr, align 4" [./layer.h:114]   --->   Operation 79 'store' <Predicate = (!icmp_ln97)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str14, i32 %tmp_7)" [./layer.h:115]   --->   Operation 80 'specregionend' 'empty_12' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 81 'br' <Predicate = (!icmp_ln97)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "ret void" [./layer.h:118]   --->   Operation 82 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten21', ./layer.h:97) with incoming values : ('add_ln97', ./layer.h:97) [5]  (1.77 ns)

 <State 2>: 8.29ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', ./layer.h:99) with incoming values : ('select_ln99', ./layer.h:99) [7]  (0 ns)
	'icmp' operation ('icmp_ln99', ./layer.h:99) [19]  (1.43 ns)
	'select' operation ('select_ln110', ./layer.h:110) [20]  (0.98 ns)
	'add' operation ('x', ./layer.h:99) [26]  (1.65 ns)
	'shl' operation ('shl_ln110_1', ./layer.h:110) [30]  (0 ns)
	'select' operation ('select_ln110_5', ./layer.h:110) [40]  (0.98 ns)
	'getelementptr' operation ('input_addr', ./layer.h:110) [42]  (0 ns)
	'load' operation ('input_load', ./layer.h:110) on array 'input_r' [47]  (3.25 ns)

 <State 3>: 5.08ns
The critical path consists of the following:
	'select' operation ('select_ln110_3', ./layer.h:110) [31]  (0.98 ns)
	'add' operation ('add_ln114', ./layer.h:114) [65]  (1.78 ns)
	'getelementptr' operation ('output_addr', ./layer.h:114) [67]  (0 ns)
	'load' operation ('output_load', ./layer.h:114) on array 'output_r' [68]  (2.32 ns)

 <State 4>: 6.55ns
The critical path consists of the following:
	'load' operation ('input_load_2', ./layer.h:110) on array 'input_r' [56]  (3.25 ns)
	'or' operation ('or_ln110_3', ./layer.h:110) [61]  (0 ns)
	'or' operation ('or_ln110_4', ./layer.h:110) [62]  (0.978 ns)
	'store' operation ('store_ln114', ./layer.h:114) of variable 'tmp_9', ./layer.h:114 on array 'output_r' [70]  (2.32 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
