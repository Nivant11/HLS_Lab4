// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pad_16_8_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pad_16_8_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pad_16_8_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> pad_16_8_s::ap_ST_fsm_state1 = "1";
const sc_lv<5> pad_16_8_s::ap_ST_fsm_state2 = "10";
const sc_lv<5> pad_16_8_s::ap_ST_fsm_state3 = "100";
const sc_lv<5> pad_16_8_s::ap_ST_fsm_state4 = "1000";
const sc_lv<5> pad_16_8_s::ap_ST_fsm_state5 = "10000";
const sc_lv<32> pad_16_8_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pad_16_8_s::ap_const_lv32_1 = "1";
const sc_lv<1> pad_16_8_s::ap_const_lv1_0 = "0";
const sc_lv<32> pad_16_8_s::ap_const_lv32_2 = "10";
const sc_lv<32> pad_16_8_s::ap_const_lv32_3 = "11";
const sc_lv<5> pad_16_8_s::ap_const_lv5_0 = "00000";
const sc_lv<1> pad_16_8_s::ap_const_lv1_1 = "1";
const sc_lv<4> pad_16_8_s::ap_const_lv4_0 = "0000";
const sc_lv<32> pad_16_8_s::ap_const_lv32_4 = "100";
const sc_lv<5> pad_16_8_s::ap_const_lv5_10 = "10000";
const sc_lv<5> pad_16_8_s::ap_const_lv5_1 = "1";
const sc_lv<4> pad_16_8_s::ap_const_lv4_8 = "1000";
const sc_lv<4> pad_16_8_s::ap_const_lv4_1 = "1";
const sc_lv<3> pad_16_8_s::ap_const_lv3_0 = "000";
const bool pad_16_8_s::ap_const_boolean_1 = true;

pad_16_8_s::pad_16_8_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln27_2_fu_201_p2);
    sensitive << ( zext_ln27_5_fu_197_p1 );
    sensitive << ( zext_ln27_4_fu_185_p1 );

    SC_METHOD(thread_add_ln27_3_fu_207_p2);
    sensitive << ( zext_ln26_reg_261 );
    sensitive << ( add_ln27_2_fu_201_p2 );

    SC_METHOD(thread_add_ln27_fu_167_p2);
    sensitive << ( zext_ln27_1_reg_256 );
    sensitive << ( zext_ln27_2_fu_163_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln22_fu_107_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln22_fu_107_p2 );

    SC_METHOD(thread_icmp_ln22_fu_107_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_0_reg_74 );

    SC_METHOD(thread_icmp_ln24_fu_123_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( x_0_reg_85 );

    SC_METHOD(thread_icmp_ln26_fu_143_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_0_reg_96 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln27_3_fu_172_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_m_fu_113_p2);
    sensitive << ( m_0_reg_74 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_addr_reg_279 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln27_6_fu_212_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( output_r_q0 );
    sensitive << ( zext_ln27_reg_242 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_217_p3 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_2_fu_217_p3);
    sensitive << ( input_r_q0 );
    sensitive << ( zext_ln27_reg_242 );

    SC_METHOD(thread_tmp_4_fu_155_p3);
    sensitive << ( y_0_reg_96 );

    SC_METHOD(thread_tmp_5_fu_177_p3);
    sensitive << ( y_fu_149_p2 );

    SC_METHOD(thread_tmp_6_fu_189_p3);
    sensitive << ( y_fu_149_p2 );

    SC_METHOD(thread_x_fu_129_p2);
    sensitive << ( x_0_reg_85 );

    SC_METHOD(thread_y_fu_149_p2);
    sensitive << ( y_0_reg_96 );

    SC_METHOD(thread_zext_ln26_fu_139_p1);
    sensitive << ( x_fu_129_p2 );

    SC_METHOD(thread_zext_ln27_1_fu_135_p1);
    sensitive << ( x_0_reg_85 );

    SC_METHOD(thread_zext_ln27_2_fu_163_p1);
    sensitive << ( tmp_4_fu_155_p3 );

    SC_METHOD(thread_zext_ln27_3_fu_172_p1);
    sensitive << ( add_ln27_fu_167_p2 );

    SC_METHOD(thread_zext_ln27_4_fu_185_p1);
    sensitive << ( tmp_5_fu_177_p3 );

    SC_METHOD(thread_zext_ln27_5_fu_197_p1);
    sensitive << ( tmp_6_fu_189_p3 );

    SC_METHOD(thread_zext_ln27_6_fu_212_p1);
    sensitive << ( add_ln27_3_fu_207_p2 );

    SC_METHOD(thread_zext_ln27_fu_119_p1);
    sensitive << ( m_0_reg_74 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln22_fu_107_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln24_fu_123_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln26_fu_143_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pad_16_8_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_fu_113_p2, "m_fu_113_p2");
    sc_trace(mVcdFile, m_reg_237, "m_reg_237");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln27_fu_119_p1, "zext_ln27_fu_119_p1");
    sc_trace(mVcdFile, zext_ln27_reg_242, "zext_ln27_reg_242");
    sc_trace(mVcdFile, icmp_ln22_fu_107_p2, "icmp_ln22_fu_107_p2");
    sc_trace(mVcdFile, x_fu_129_p2, "x_fu_129_p2");
    sc_trace(mVcdFile, x_reg_251, "x_reg_251");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln27_1_fu_135_p1, "zext_ln27_1_fu_135_p1");
    sc_trace(mVcdFile, zext_ln27_1_reg_256, "zext_ln27_1_reg_256");
    sc_trace(mVcdFile, icmp_ln24_fu_123_p2, "icmp_ln24_fu_123_p2");
    sc_trace(mVcdFile, zext_ln26_fu_139_p1, "zext_ln26_fu_139_p1");
    sc_trace(mVcdFile, zext_ln26_reg_261, "zext_ln26_reg_261");
    sc_trace(mVcdFile, y_fu_149_p2, "y_fu_149_p2");
    sc_trace(mVcdFile, y_reg_269, "y_reg_269");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln26_fu_143_p2, "icmp_ln26_fu_143_p2");
    sc_trace(mVcdFile, output_addr_reg_279, "output_addr_reg_279");
    sc_trace(mVcdFile, m_0_reg_74, "m_0_reg_74");
    sc_trace(mVcdFile, x_0_reg_85, "x_0_reg_85");
    sc_trace(mVcdFile, y_0_reg_96, "y_0_reg_96");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln27_3_fu_172_p1, "zext_ln27_3_fu_172_p1");
    sc_trace(mVcdFile, zext_ln27_6_fu_212_p1, "zext_ln27_6_fu_212_p1");
    sc_trace(mVcdFile, tmp_4_fu_155_p3, "tmp_4_fu_155_p3");
    sc_trace(mVcdFile, zext_ln27_2_fu_163_p1, "zext_ln27_2_fu_163_p1");
    sc_trace(mVcdFile, add_ln27_fu_167_p2, "add_ln27_fu_167_p2");
    sc_trace(mVcdFile, tmp_5_fu_177_p3, "tmp_5_fu_177_p3");
    sc_trace(mVcdFile, tmp_6_fu_189_p3, "tmp_6_fu_189_p3");
    sc_trace(mVcdFile, zext_ln27_5_fu_197_p1, "zext_ln27_5_fu_197_p1");
    sc_trace(mVcdFile, zext_ln27_4_fu_185_p1, "zext_ln27_4_fu_185_p1");
    sc_trace(mVcdFile, add_ln27_2_fu_201_p2, "add_ln27_2_fu_201_p2");
    sc_trace(mVcdFile, add_ln27_3_fu_207_p2, "add_ln27_3_fu_207_p2");
    sc_trace(mVcdFile, tmp_2_fu_217_p3, "tmp_2_fu_217_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pad_16_8_s::~pad_16_8_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pad_16_8_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_123_p2.read(), ap_const_lv1_1))) {
        m_0_reg_74 = m_reg_237.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_0_reg_74 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_143_p2.read(), ap_const_lv1_1))) {
        x_0_reg_85 = x_reg_251.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln22_fu_107_p2.read(), ap_const_lv1_0))) {
        x_0_reg_85 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        y_0_reg_96 = y_reg_269.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_123_p2.read()))) {
        y_0_reg_96 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        m_reg_237 = m_fu_113_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_143_p2.read()))) {
        output_addr_reg_279 =  (sc_lv<7>) (zext_ln27_6_fu_212_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_reg_251 = x_fu_129_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_reg_269 = y_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_123_p2.read()))) {
        zext_ln26_reg_261 = zext_ln26_fu_139_p1.read();
        zext_ln27_1_reg_256 = zext_ln27_1_fu_135_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln22_fu_107_p2.read(), ap_const_lv1_0))) {
        zext_ln27_reg_242 = zext_ln27_fu_119_p1.read();
    }
}

void pad_16_8_s::thread_add_ln27_2_fu_201_p2() {
    add_ln27_2_fu_201_p2 = (!zext_ln27_5_fu_197_p1.read().is_01() || !zext_ln27_4_fu_185_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln27_5_fu_197_p1.read()) + sc_biguint<8>(zext_ln27_4_fu_185_p1.read()));
}

void pad_16_8_s::thread_add_ln27_3_fu_207_p2() {
    add_ln27_3_fu_207_p2 = (!add_ln27_2_fu_201_p2.read().is_01() || !zext_ln26_reg_261.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln27_2_fu_201_p2.read()) + sc_biguint<8>(zext_ln26_reg_261.read()));
}

void pad_16_8_s::thread_add_ln27_fu_167_p2() {
    add_ln27_fu_167_p2 = (!zext_ln27_2_fu_163_p1.read().is_01() || !zext_ln27_1_reg_256.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln27_2_fu_163_p1.read()) + sc_biguint<8>(zext_ln27_1_reg_256.read()));
}

void pad_16_8_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pad_16_8_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pad_16_8_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pad_16_8_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pad_16_8_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pad_16_8_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln22_fu_107_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pad_16_8_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pad_16_8_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln22_fu_107_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pad_16_8_s::thread_icmp_ln22_fu_107_p2() {
    icmp_ln22_fu_107_p2 = (!m_0_reg_74.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_74.read() == ap_const_lv5_10);
}

void pad_16_8_s::thread_icmp_ln24_fu_123_p2() {
    icmp_ln24_fu_123_p2 = (!x_0_reg_85.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_85.read() == ap_const_lv4_8);
}

void pad_16_8_s::thread_icmp_ln26_fu_143_p2() {
    icmp_ln26_fu_143_p2 = (!y_0_reg_96.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_96.read() == ap_const_lv4_8);
}

void pad_16_8_s::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<6>) (zext_ln27_3_fu_172_p1.read());
}

void pad_16_8_s::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pad_16_8_s::thread_m_fu_113_p2() {
    m_fu_113_p2 = (!m_0_reg_74.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(m_0_reg_74.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pad_16_8_s::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_address0 = output_addr_reg_279.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address0 =  (sc_lv<7>) (zext_ln27_6_fu_212_p1.read());
    } else {
        output_r_address0 = "XXXXXXX";
    }
}

void pad_16_8_s::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pad_16_8_s::thread_output_r_d0() {
    output_r_d0 = esl_bitset<16,16,6,1>(output_r_q0.read(), zext_ln27_reg_242.read(), tmp_2_fu_217_p3.read());
}

void pad_16_8_s::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pad_16_8_s::thread_tmp_2_fu_217_p3() {
    tmp_2_fu_217_p3 = (!zext_ln27_reg_242.read().is_01() || sc_biguint<6>(zext_ln27_reg_242.read()).to_uint() >= 16)? sc_lv<1>(): input_r_q0.read().range(sc_biguint<6>(zext_ln27_reg_242.read()).to_uint(), sc_biguint<6>(zext_ln27_reg_242.read()).to_uint());
}

void pad_16_8_s::thread_tmp_4_fu_155_p3() {
    tmp_4_fu_155_p3 = esl_concat<4,3>(y_0_reg_96.read(), ap_const_lv3_0);
}

void pad_16_8_s::thread_tmp_5_fu_177_p3() {
    tmp_5_fu_177_p3 = esl_concat<4,3>(y_fu_149_p2.read(), ap_const_lv3_0);
}

void pad_16_8_s::thread_tmp_6_fu_189_p3() {
    tmp_6_fu_189_p3 = esl_concat<4,1>(y_fu_149_p2.read(), ap_const_lv1_0);
}

void pad_16_8_s::thread_x_fu_129_p2() {
    x_fu_129_p2 = (!x_0_reg_85.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_reg_85.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pad_16_8_s::thread_y_fu_149_p2() {
    y_fu_149_p2 = (!y_0_reg_96.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(y_0_reg_96.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pad_16_8_s::thread_zext_ln26_fu_139_p1() {
    zext_ln26_fu_139_p1 = esl_zext<8,4>(x_fu_129_p2.read());
}

void pad_16_8_s::thread_zext_ln27_1_fu_135_p1() {
    zext_ln27_1_fu_135_p1 = esl_zext<8,4>(x_0_reg_85.read());
}

void pad_16_8_s::thread_zext_ln27_2_fu_163_p1() {
    zext_ln27_2_fu_163_p1 = esl_zext<8,7>(tmp_4_fu_155_p3.read());
}

void pad_16_8_s::thread_zext_ln27_3_fu_172_p1() {
    zext_ln27_3_fu_172_p1 = esl_zext<64,8>(add_ln27_fu_167_p2.read());
}

void pad_16_8_s::thread_zext_ln27_4_fu_185_p1() {
    zext_ln27_4_fu_185_p1 = esl_zext<8,7>(tmp_5_fu_177_p3.read());
}

void pad_16_8_s::thread_zext_ln27_5_fu_197_p1() {
    zext_ln27_5_fu_197_p1 = esl_zext<8,5>(tmp_6_fu_189_p3.read());
}

void pad_16_8_s::thread_zext_ln27_6_fu_212_p1() {
    zext_ln27_6_fu_212_p1 = esl_zext<64,8>(add_ln27_3_fu_207_p2.read());
}

void pad_16_8_s::thread_zext_ln27_fu_119_p1() {
    zext_ln27_fu_119_p1 = esl_zext<6,5>(m_0_reg_74.read());
}

void pad_16_8_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln22_fu_107_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_123_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_143_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

